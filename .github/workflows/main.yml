name: Build and Release Electron App

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Build the Electron app
        run: npm run make

      - name: Upload artifacts
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: actions/upload-artifact@v3
        with:
          name: linux-build
          path: out/make/*/linux-*

      - name: Upload artifacts
        if: ${{ matrix.os == 'windows-latest' }}
        uses: actions/upload-artifact@v3
        with:
          name: windows-build
          path: out/make/*/windows-*

      - name: Upload artifacts
        if: ${{ matrix.os == 'macos-latest' }}
        uses: actions/upload-artifact@v3
        with:
          name: macos-build
          path: out/make/*/mac-*

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download Linux build
        uses: actions/download-artifact@v3
        with:
          name: linux-build

      - name: Download Windows build
        uses: actions/download-artifact@v3
        with:
          name: windows-build

      - name: Download macOS build
        uses: actions/download-artifact@v3
        with:
          name: macos-build

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "out/make/*"
          asset_name: "${{ matrix.os }}-app.zip"
          asset_content_type: application/zip
